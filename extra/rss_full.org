# generate a bunch of headings like the reference headline, which can then be exported to rss

#+TITLE: neeasade's notes (full feed)
#+DESCRIPTION: neeasade's notes (full feed)
#+HTML_LINK_HOME: https://notes.neeasade.net/
#+RSS_FEED_URL: https://notes.neeasade.net/rss_full.xml
# #+RSS_IMAGE_URL: http://url/to/some/icon.png

# rss format reference:
# * wow what a headline
#   :PROPERTIES:
#   :ID:       wow-what-a-headline
#   :PUBDATE:  <2020-03-16 Mon 18:57>
#   :RSS_PERMALINK:  https://full-link-to-post.html
#   :END:

#+BEGIN_SRC elisp :results raw :exports results
(->> (ns/blog-get-metas)
     (-filter (-lambda ((&hash :draft-p :rss-title :edited-date :type))
		  (and edited-date 	; tracked by git
		   rss-title
		   (not draft-p)
		   (-contains-p '("post") type))))
     (--sort (string-greaterp
	      (ht-get it :publish-date)
	      (ht-get other :publish-date)))
     (-map
      (fn (format (s-join "\n" '("* %s"
				 ":PROPERTIES:"
				 ":ID: %s"
				 ":PUBDATE: %s"
				 ":RSS_PERMALINK: %s"
				 ":END:"))
		  (or (ht-get <> :rss-title) (ht-get <> :title))
		  (or (ht-get <> :rss-title) (ht-get <> :title))
		  (ht-get <> :published-date)
		  (f-filename (ht-get <> :html-dest)))))
     ;; (-map (-lambda ((&hash :edited-date :html-dest :title))
     ;; 	       (format "- <%s> [[file:./%s.html][%s]]"
     ;; 		edited-date (f-base html-dest) title)))
     (s-join "\n"))
#+END_SRC
